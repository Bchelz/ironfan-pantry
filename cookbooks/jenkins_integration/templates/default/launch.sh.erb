#!/usr/bin/env bash
#
# Launch a testing instance, and wait to see if chef-client
#   ran to completion successfully.
#

source `dirname $0`/shared.inc

export FACET=$1
export CHEF_LOG=/var/log/chef/client.log
export CHEF_STACKTRACE=/var/chef/cache/chef-stacktrace.out
export CLUSTER=${FACET%-*}
export CREDENTIALS="-x ubuntu -i knife/credentials/ec2_keys/$CLUSTER.pem";

function kc {
  knife cluster "$@"
}
function klean_up {
  h1 "Killing $FACET"
  kc kill $FACET --yes
}
function klean_success {
  klean_up
  success $1
}
function klean_failure {
  klean_up
  failure "$@"
}

h1 "List all clusters"
kc list -f

h1 "Show $CLUSTER cluster"
kc show $CLUSTER

h1 "Launch $FACET"
kc launch $FACET || klean_failure 1 "FATAL: knife cluster launch failed"

h1 "Wait while chef finishes running"
WAIT=0
while true; do
  sleep 15
  WAIT=$((WAIT+15))
  # FIXME: inaccurate (only counts wait time). Not really worth fixing yet.
  item "Waited $WAIT seconds while chef finishes running"

  kc ssh $FACET $CREDENTIALS cat $CHEF_LOG > tmp.client.log 
  if grep -q "FATAL: Stacktrace dumped to $CHEF_STACKTRACE" tmp.client.log; then
    kc ssh $FACET $CREDENTIALS sudo cat $CHEF_STACKTRACE >> tmp.client.log
    echo
    cat tmp.client.log
    klean_failure 2 "$FACET initial chef-client failed"
  elif grep -q 'INFO: Chef Run complete in ' tmp.client.log; then
    echo
    cat tmp.client.log
    klean_success "$FACET initial chef-client run completed successfully"
  elif [ $WAIT -gt $MAX_WAIT ]; then
    klean_failure 1 "Waited too long for results."
  fi
done
