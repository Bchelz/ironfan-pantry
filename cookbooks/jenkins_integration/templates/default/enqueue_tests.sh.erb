#!/usr/bin/env bash
# Prepare the pantries and homebases for cookbook testing
source `dirname $0`/shared.inc

REPOS="<%=( node[:jenkins_integration][:ironfan_ci][:pantries] +
            node[:jenkins_integration][:ironfan_ci][:homebases] ).join(' ') %>"

for repo in $REPOS; do
  $ROOT_DIR/checkout.sh $repo
done

for name in $ALL_PATHS; do
  cd $WORKSPACE/$name
  pwd

  echo "make sure master is a descendant of testing:"
  git merge testing | grep 'Already up-to-date'
  if [ $? -ne '0' ]; then
    echo "FATAL: master is not a descendant of testing" >&2
    exit 1
  fi
  echo

  echo "push the changes forward into testing"
  git checkout -f testing
  git merge master
  git push origin testing       # Just the HEAD, baby
  echo
done

echo "Getting staging cookbooks:"
pantry_branch "staging"
for homebase in $HOMEBASES; do
  cd $WORKSPACE/$homebase; pwd
  git checkout -f staging
  ensure_bundle
  berkshelf --path staged_cookbooks
  echo
end

echo "Getting testing cookbooks:"
pantry_branch "testing"
for homebase in $HOMEBASES; do
  cd $WORKSPACE/$homebase; pwd
  git checkout -f testing
  ensure_bundle
  berkshelf --path cookbooks
  echo
end

echo "Detecting changed cookbooks:"
for homebase in $HOMEBASES; do
  cd $WORKSPACE/$homebase; pwd
  changed=''
  for cookbook in `ls -1d cookbooks/*/ | cut -d/ -f2`; do
    cb_path=cookbooks/$cookbook
    # Don't treat a removed cookbook as changed
    test_path="[ -d $cb_path ]"
    no_change="diff -qr $cb_path staged_$cb_path"
    if $test_path && ! $no_change > /dev/null; then
      changed="$changed$cookbook "
    fi
  done
  if [ "nothing$changed" == "nothing" ]; then
    echo "Nothing changed - very suspicious"
    exit 1
  fi
end

echo "Install testing cookbooks, upload and freeze those which changed this run"
for homebase in $HOMEBASES; do
  cd $WORKSPACE/$homebase; pwd
  berkshelf --path cookbooks
  knife cookbook upload -V --freeze $changed
  echo
done

